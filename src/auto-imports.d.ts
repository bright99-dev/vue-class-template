/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const ACCESS_TOKEN: typeof import('./constants/auth')['ACCESS_TOKEN']
  const AUTH_USER: typeof import('./constants/auth')['AUTH_USER']
  const AuthService: typeof import('./services/auth.service')['AuthService']
  const BaseController: typeof import('./controllers/BaseController')['default']
  const BaseService: typeof import('./services/base.service')['BaseService']
  const EXPIRES: typeof import('./constants/auth')['EXPIRES']
  const EffectScope: typeof import('vue')['EffectScope']
  const Http: typeof import('./services/http.service')['Http']
  const LOCALKEY: typeof import('./constants/auth')['LOCALKEY']
  const PostController: typeof import('./controllers/PostController')['default']
  const PostService: typeof import('./services/post.service')['PostService']
  const REFRESH_TOKEN: typeof import('./constants/auth')['REFRESH_TOKEN']
  const ROUTE: typeof import('./constants/error')['ROUTE']
  const SubscriptionController: typeof import('./controllers/SubscriptionController')['default']
  const SubscriptionService: typeof import('./services/subscription.service')['SubscriptionService']
  const TOKEN_TYPE: typeof import('./constants/auth')['TOKEN_TYPE']
  const UserController: typeof import('./controllers/UserController')['default']
  const UserService: typeof import('./services/user.service')['UserService']
  const addClass: typeof import('./utils/index.js')['addClass']
  const byteLength: typeof import('./utils/index.js')['byteLength']
  const cleanArray: typeof import('./utils/index.js')['cleanArray']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createUniqueString: typeof import('./utils/index.js')['createUniqueString']
  const customRef: typeof import('vue')['customRef']
  const debounce: typeof import('./utils/index.js')['debounce']
  const deepClone: typeof import('./utils/index.js')['deepClone']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const formatTime: typeof import('./utils/index.js')['formatTime']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getQueryObject: typeof import('./utils/index.js')['getQueryObject']
  const getTime: typeof import('./utils/index.js')['getTime']
  const h: typeof import('vue')['h']
  const hasClass: typeof import('./utils/index.js')['hasClass']
  const html2Text: typeof import('./utils/index.js')['html2Text']
  const inject: typeof import('vue')['inject']
  const isArray: typeof import('./utils/validate.js')['isArray']
  const isExternal: typeof import('./utils/validate.js')['isExternal']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const isString: typeof import('./utils/validate.js')['isString']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const objectMerge: typeof import('./utils/index.js')['objectMerge']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const openWindow: typeof import('./utils/open-window.js')['default']
  const param: typeof import('./utils/index.js')['param']
  const param2Obj: typeof import('./utils/index.js')['param2Obj']
  const parseTime: typeof import('./utils/index.js')['parseTime']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const removeClass: typeof import('./utils/index.js')['removeClass']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const toggleClass: typeof import('./utils/index.js')['toggleClass']
  const triggerRef: typeof import('vue')['triggerRef']
  const uniqueArr: typeof import('./utils/index.js')['uniqueArr']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useLink: typeof import('vue-router')['useLink']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const validAlphabets: typeof import('./utils/validate.js')['validAlphabets']
  const validEmail: typeof import('./utils/validate.js')['validEmail']
  const validLowerCase: typeof import('./utils/validate.js')['validLowerCase']
  const validURL: typeof import('./utils/validate.js')['validURL']
  const validUpperCase: typeof import('./utils/validate.js')['validUpperCase']
  const validUsername: typeof import('./utils/validate.js')['validUsername']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface ComponentCustomProperties {
    readonly ACCESS_TOKEN: UnwrapRef<typeof import('./constants/auth')['ACCESS_TOKEN']>
    readonly AUTH_USER: UnwrapRef<typeof import('./constants/auth')['AUTH_USER']>
    readonly AuthService: UnwrapRef<typeof import('./services/auth.service')['AuthService']>
    readonly BaseController: UnwrapRef<typeof import('./controllers/BaseController')['default']>
    readonly BaseService: UnwrapRef<typeof import('./services/base.service')['BaseService']>
    readonly EXPIRES: UnwrapRef<typeof import('./constants/auth')['EXPIRES']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly Http: UnwrapRef<typeof import('./services/http.service')['Http']>
    readonly LOCALKEY: UnwrapRef<typeof import('./constants/auth')['LOCALKEY']>
    readonly PostController: UnwrapRef<typeof import('./controllers/PostController')['default']>
    readonly PostService: UnwrapRef<typeof import('./services/post.service')['PostService']>
    readonly REFRESH_TOKEN: UnwrapRef<typeof import('./constants/auth')['REFRESH_TOKEN']>
    readonly ROUTE: UnwrapRef<typeof import('./constants/error')['ROUTE']>
    readonly SubscriptionController: UnwrapRef<typeof import('./controllers/SubscriptionController')['default']>
    readonly SubscriptionService: UnwrapRef<typeof import('./services/subscription.service')['SubscriptionService']>
    readonly TOKEN_TYPE: UnwrapRef<typeof import('./constants/auth')['TOKEN_TYPE']>
    readonly UserController: UnwrapRef<typeof import('./controllers/UserController')['default']>
    readonly UserService: UnwrapRef<typeof import('./services/user.service')['UserService']>
    readonly addClass: UnwrapRef<typeof import('./utils/index.js')['addClass']>
    readonly byteLength: UnwrapRef<typeof import('./utils/index.js')['byteLength']>
    readonly cleanArray: UnwrapRef<typeof import('./utils/index.js')['cleanArray']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createUniqueString: UnwrapRef<typeof import('./utils/index.js')['createUniqueString']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly debounce: UnwrapRef<typeof import('./utils/index.js')['debounce']>
    readonly deepClone: UnwrapRef<typeof import('./utils/index.js')['deepClone']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly formatTime: UnwrapRef<typeof import('./utils/index.js')['formatTime']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getQueryObject: UnwrapRef<typeof import('./utils/index.js')['getQueryObject']>
    readonly getTime: UnwrapRef<typeof import('./utils/index.js')['getTime']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly hasClass: UnwrapRef<typeof import('./utils/index.js')['hasClass']>
    readonly html2Text: UnwrapRef<typeof import('./utils/index.js')['html2Text']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isArray: UnwrapRef<typeof import('./utils/validate.js')['isArray']>
    readonly isExternal: UnwrapRef<typeof import('./utils/validate.js')['isExternal']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly isString: UnwrapRef<typeof import('./utils/validate.js')['isString']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly objectMerge: UnwrapRef<typeof import('./utils/index.js')['objectMerge']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly openWindow: UnwrapRef<typeof import('./utils/open-window.js')['default']>
    readonly param2Obj: UnwrapRef<typeof import('./utils/index.js')['param2Obj']>
    readonly param: UnwrapRef<typeof import('./utils/index.js')['param']>
    readonly parseTime: UnwrapRef<typeof import('./utils/index.js')['parseTime']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly removeClass: UnwrapRef<typeof import('./utils/index.js')['removeClass']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly toggleClass: UnwrapRef<typeof import('./utils/index.js')['toggleClass']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly uniqueArr: UnwrapRef<typeof import('./utils/index.js')['uniqueArr']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useLink: UnwrapRef<typeof import('vue-router')['useLink']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly validAlphabets: UnwrapRef<typeof import('./utils/validate.js')['validAlphabets']>
    readonly validEmail: UnwrapRef<typeof import('./utils/validate.js')['validEmail']>
    readonly validLowerCase: UnwrapRef<typeof import('./utils/validate.js')['validLowerCase']>
    readonly validURL: UnwrapRef<typeof import('./utils/validate.js')['validURL']>
    readonly validUpperCase: UnwrapRef<typeof import('./utils/validate.js')['validUpperCase']>
    readonly validUsername: UnwrapRef<typeof import('./utils/validate.js')['validUsername']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
declare module '@vue/runtime-core' {
  interface ComponentCustomProperties {
    readonly ACCESS_TOKEN: UnwrapRef<typeof import('./constants/auth')['ACCESS_TOKEN']>
    readonly AUTH_USER: UnwrapRef<typeof import('./constants/auth')['AUTH_USER']>
    readonly AuthService: UnwrapRef<typeof import('./services/auth.service')['AuthService']>
    readonly BaseController: UnwrapRef<typeof import('./controllers/BaseController')['default']>
    readonly BaseService: UnwrapRef<typeof import('./services/base.service')['BaseService']>
    readonly EXPIRES: UnwrapRef<typeof import('./constants/auth')['EXPIRES']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly Http: UnwrapRef<typeof import('./services/http.service')['Http']>
    readonly LOCALKEY: UnwrapRef<typeof import('./constants/auth')['LOCALKEY']>
    readonly PostController: UnwrapRef<typeof import('./controllers/PostController')['default']>
    readonly PostService: UnwrapRef<typeof import('./services/post.service')['PostService']>
    readonly REFRESH_TOKEN: UnwrapRef<typeof import('./constants/auth')['REFRESH_TOKEN']>
    readonly ROUTE: UnwrapRef<typeof import('./constants/error')['ROUTE']>
    readonly SubscriptionController: UnwrapRef<typeof import('./controllers/SubscriptionController')['default']>
    readonly SubscriptionService: UnwrapRef<typeof import('./services/subscription.service')['SubscriptionService']>
    readonly TOKEN_TYPE: UnwrapRef<typeof import('./constants/auth')['TOKEN_TYPE']>
    readonly UserController: UnwrapRef<typeof import('./controllers/UserController')['default']>
    readonly UserService: UnwrapRef<typeof import('./services/user.service')['UserService']>
    readonly addClass: UnwrapRef<typeof import('./utils/index.js')['addClass']>
    readonly byteLength: UnwrapRef<typeof import('./utils/index.js')['byteLength']>
    readonly cleanArray: UnwrapRef<typeof import('./utils/index.js')['cleanArray']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createUniqueString: UnwrapRef<typeof import('./utils/index.js')['createUniqueString']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly debounce: UnwrapRef<typeof import('./utils/index.js')['debounce']>
    readonly deepClone: UnwrapRef<typeof import('./utils/index.js')['deepClone']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly formatTime: UnwrapRef<typeof import('./utils/index.js')['formatTime']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getQueryObject: UnwrapRef<typeof import('./utils/index.js')['getQueryObject']>
    readonly getTime: UnwrapRef<typeof import('./utils/index.js')['getTime']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly hasClass: UnwrapRef<typeof import('./utils/index.js')['hasClass']>
    readonly html2Text: UnwrapRef<typeof import('./utils/index.js')['html2Text']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isArray: UnwrapRef<typeof import('./utils/validate.js')['isArray']>
    readonly isExternal: UnwrapRef<typeof import('./utils/validate.js')['isExternal']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly isString: UnwrapRef<typeof import('./utils/validate.js')['isString']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly objectMerge: UnwrapRef<typeof import('./utils/index.js')['objectMerge']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly openWindow: UnwrapRef<typeof import('./utils/open-window.js')['default']>
    readonly param2Obj: UnwrapRef<typeof import('./utils/index.js')['param2Obj']>
    readonly param: UnwrapRef<typeof import('./utils/index.js')['param']>
    readonly parseTime: UnwrapRef<typeof import('./utils/index.js')['parseTime']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly removeClass: UnwrapRef<typeof import('./utils/index.js')['removeClass']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly toggleClass: UnwrapRef<typeof import('./utils/index.js')['toggleClass']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly uniqueArr: UnwrapRef<typeof import('./utils/index.js')['uniqueArr']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useLink: UnwrapRef<typeof import('vue-router')['useLink']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly validAlphabets: UnwrapRef<typeof import('./utils/validate.js')['validAlphabets']>
    readonly validEmail: UnwrapRef<typeof import('./utils/validate.js')['validEmail']>
    readonly validLowerCase: UnwrapRef<typeof import('./utils/validate.js')['validLowerCase']>
    readonly validURL: UnwrapRef<typeof import('./utils/validate.js')['validURL']>
    readonly validUpperCase: UnwrapRef<typeof import('./utils/validate.js')['validUpperCase']>
    readonly validUsername: UnwrapRef<typeof import('./utils/validate.js')['validUsername']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
